"use strict";

// Плохой пример каррирования функции, он практически не читаем.
// В функцию передается функция, а возвращается каррировання функция,
const curry = (fn) => (...args) => (
  fn.length > args.length ? curry(
    ((fn, ...args1) => (...args2) => ( // первым аргументом передается лямбда у которой есть первый аргумент, и другие аргумент.
                                                // Из нее возвращается еще одна лямбда которая захватывает вторую группу аргументов.
      fn(...args1.concat(args2)) // Эти аргументы склеиваются и передаются в функцию которую надо каррировать.
    ))(fn, ...args)
  ) : fn(...args)
);

// Usage

const sum4 = (a, b, c, d) => (a + b + c + d);

const f = curry(sum4);
const y1 = sum4(1, 2, 3, 4);
const y2 = f(1, 2, 3, 4);
const y3 = f(1, 2, 3)(4);
//const y4 = f(1, 2)(3)(4);
//const y5 = f(1)(2)(3)(4);
const y6 = f(1)(2, 3, 4);
//const y7 = f(1)(2)(3, 4);
const y8 = f(1, 2)(3, 4);
console.log(y1, y2, y3, y6, y8);
